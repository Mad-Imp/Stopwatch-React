{"version":3,"sources":["Timer.js","App.js","index.js"],"names":["Timer","useState","seconds","setSeconds","minutes","setMinutes","hours","setHours","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","className","id","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAoEeA,EAjED,WAAO,IAAD,EAEcC,mBAAS,GAFvB,mBAETC,EAFS,KAEAC,EAFA,OAGcF,mBAAS,GAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIUJ,mBAAS,GAJnB,mBAITK,EAJS,KAIFC,EAJE,OAKgBN,oBAAS,GALzB,mBAKTO,EALS,KAKCC,EALD,KAuChB,OArBIP,GAAW,KACXC,EAAY,GACZE,EAAWD,EAAU,IAErBA,GAAW,KACXC,EAAY,GACZE,EAASD,EAAQ,IAGrBI,qBAAU,WACN,IAAIC,EAAW,EAQf,OAPIH,EACAG,EAAWC,aAAY,WACnBT,GAAW,SAAAD,GAAO,OAAIA,EAAU,OACjC,KACKM,GACRK,cAAcF,GAEX,kBAAME,cAAcF,MAC5B,CAACH,EAAUN,IAGV,sBAAKY,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SAAwB,mBAAGC,GAAG,OAAN,SAAeT,EAAQ,GAAT,WAAmBA,GAAUA,MACnE,sBAAKQ,UAAU,OAAf,UACI,qBAAKA,UAAU,QACf,qBAAKA,UAAU,WAEnB,qBAAKA,UAAU,SAAf,SAAwB,mBAAGC,GAAG,MAAN,SAAcX,EAAU,GAAX,WAAqBA,GAAYA,MACtE,sBAAKU,UAAU,OAAf,UACI,qBAAKA,UAAU,QACf,qBAAKA,UAAU,WAEnB,qBAAKA,UAAU,SAAf,SAAwB,mBAAGC,GAAG,MAAN,SAAcb,EAAU,GAAX,WAAqBA,GAAYA,SAE1E,sBAAKY,UAAU,UAAf,UACI,wBAAQE,QAhDpB,WACIP,GAAaD,IAgDGM,UAAU,QADlB,SAC2BN,EAAW,QAAU,UAChD,wBAASQ,QA9CrB,WACIb,EAAW,GACXE,EAAW,GACXE,EAAS,GACTE,GAAY,IA2CKK,UAAU,QADnB,0B,MC7CDG,MAZf,WACI,OACI,sBAAKH,UAAU,MAAf,UACI,oBAAIA,UAAU,QAAd,6BACA,qBAAKA,UAAU,OAAf,SACI,cAAC,EAAD,UCHhBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2d130a2e.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\";\n\n\nconst Timer = () => {\n\n    const [seconds, setSeconds] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [hours, setHours] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n    function toggle() {\n        setIsActive(!isActive)\n    }\n\n    function resetTimer() {\n        setSeconds(0);\n        setMinutes(0);\n        setHours(0);\n        setIsActive(false);\n    }\n\n    if (seconds >= 60) {\n        setSeconds( 0);\n        setMinutes(minutes + 1)\n    }\n    if (minutes >= 60) {\n        setMinutes (0);\n        setHours(hours + 1);\n    }\n\n    useEffect(() => {\n        let interval = 0\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1)\n            }, 1000);\n        } else if (!isActive) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval)\n    }, [isActive, seconds])\n\n    return (\n        <div className='timer'>\n            <div className=\"area\">\n                <div className=\"square\"><p id='hour'>{(hours < 10) ? `0${hours}` : hours}</p></div>\n                <div className=\"dots\">\n                    <div className=\"dot\"></div>\n                    <div className=\"dot\"></div>\n                </div>\n                <div className=\"square\"><p id='min'>{(minutes < 10) ? `0${minutes}` : minutes}</p></div>\n                <div className=\"dots\">\n                    <div className=\"dot\"></div>\n                    <div className=\"dot\"></div>\n                </div>\n                <div className=\"square\"><p id='sec'>{(seconds < 10) ? `0${seconds}` : seconds}</p></div>\n            </div>\n            <div className=\"buttons\">\n                <button onClick={toggle}\n                        className='start'>{isActive ? 'Pause' : 'Start'}</button>\n                <button  onClick={resetTimer}\n                         className='reset'>Reset</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Timer;\n\n\n","import Timer from \"./Timer\";\nimport './App.css'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1 className='title'>Stopwatch React</h1>\n            <div className=\"wrap\">\n                <Timer/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}